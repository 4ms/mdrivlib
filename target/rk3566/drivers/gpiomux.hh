#pragma once

#include <cstdint>

namespace Rockchip
{

template<typename SEL0, typename SEL1, typename SEL2, typename SEL3>
struct GPIO_IOMUX {

	void write(SEL0 opt) volatile {
		write(opt, 0x00);
	}
	void write(SEL1 opt) volatile {
		write(opt, 0x04);
	}
	void write(SEL2 opt) volatile {
		write(opt, 0x08);
	}
	void write(SEL3 opt) volatile {
		write(opt, 0x0c);
	}

	uint32_t reg;

private:
	void write(auto opt, int offset) volatile {
		auto mask = 0x7 << (offset + 16);
		auto val = static_cast<uint32_t>(opt) << offset;
		reg = mask | val;
		printf("GPIO_IOMUX: Write %p with %08x\n", &reg, mask | val);
	}
};

enum class GPIOX_RESERVED : uint32_t { /*reserved*/ };

enum class GPIO0A_IOMUX_L_SEL_3 : uint32_t { GPIO0_A3 };
enum class GPIO0A_IOMUX_L_SEL_2 : uint32_t { GPIO0_A2, PMIC_SLEEP, TSADC_SHUTM1 };
enum class GPIO0A_IOMUX_L_SEL_1 : uint32_t { GPIO0_A1, TSADC_SHUTM0, TSADC_SHUTORG };
enum class GPIO0A_IOMUX_L_SEL_0 : uint32_t { GPIO0_A0, REFCLK_OU };

enum class GPIO0A_IOMUX_H_SEL_7 : uint32_t { GPIO0_A7, FLASH_VOLSEL };
enum class GPIO0A_IOMUX_H_SEL_6 : uint32_t { GPIO0_A6, SATA_CPPOD, PCIE30X2_CLKREQNM0, PMU_DEBUG1, GPU_PWREN };
enum class GPIO0A_IOMUX_H_SEL_5 : uint32_t { GPIO0_A5, SDMMC0_PWREN, SATA_MPSWITCH, PCIE20_CLKREQNM0, PMU_DEBUG0 };
enum class GPIO0A_IOMUX_H_SEL_4 : uint32_t { GPIO0_A4, SDMMC0_DET, SATA_CPDET, PCIE30X1_CLKREQNM0 };

enum class GPIO0B_IOMUX_L_SEL_3 : uint32_t { GPIO0_B3, I2C1_SCL, CAN0_TXM0, PCIE30X1_BUTTONRSTN, MCU_JTAGTDO };
enum class GPIO0B_IOMUX_L_SEL_2 : uint32_t { GPIO0_B2, I2C0_SDA };
enum class GPIO0B_IOMUX_L_SEL_1 : uint32_t { GPIO0_B1, I2C0_SCL };
enum class GPIO0B_IOMUX_L_SEL_0 : uint32_t { GPIO0_B0, CLK32K_IN, CLK32K_OUT0, PCIE30X2_BUTTONRSTN };

enum class GPIO0B_IOMUX_H_SEL_7 : uint32_t { GPIO0_B7, PWM0_M0, CPU_AVS };
enum class GPIO0B_IOMUX_H_SEL_6 : uint32_t { GPIO0_B6, I2C2_SDAM0, SPI0_MOSIM0, PCIE20_PERSTNM0, PWM2_M1 };
enum class GPIO0B_IOMUX_H_SEL_5 : uint32_t { GPIO0_B5, I2C2_SCLM0, SPI0_CLKM0, PCIE20_WAKENM0, PWM1_M1 };
enum class GPIO0B_IOMUX_H_SEL_4 : uint32_t { GPIO0_B4, I2C1_SDA, CAN0_RXM0, PCIE20_BUTTONRSTN, MCU_JTAGTCK };

enum class GPIO0C_IOMUX_L_SEL_3 : uint32_t { GPIO0_C3, PWM4, VOP_PWMM0, PCIE30X1_PERSTNM0, MCU_JTAGTRSTN };
enum class GPIO0C_IOMUX_L_SEL_2 : uint32_t { GPIO0_C2, PWM3, EDPDP_HPDINM1, PCIE30X1_WAKENM0, MCU_JTAGTMS };
enum class GPIO0C_IOMUX_L_SEL_1 : uint32_t { GPIO0_C1, PWM2_M0, NPU_AVS, UART0_TX, MCU_JTAGTDI };
enum class GPIO0C_IOMUX_L_SEL_0 : uint32_t { GPIO0_C0, PWM1_M0, GPU_AVS, UART0_RX };

enum class GPIO0C_IOMUX_H_SEL_7 : uint32_t { GPIO0_C7, HDMITX_CECM1, PWM0_M1, UART0_CTSN, PMU_DEBUG5 };
enum class GPIO0C_IOMUX_H_SEL_6 : uint32_t { GPIO0_C6, PWM7, SPI0_CS0M0, PCIE30X2_PERSTNM0, PMU_DEBUG4 };
enum class GPIO0C_IOMUX_H_SEL_5 : uint32_t { GPIO0_C5, PWM6, SPI0_MISOM0, PCIE30X2_WAKENM0, PMU_DEBUG3 };
enum class GPIO0C_IOMUX_H_SEL_4 : uint32_t { GPIO0_C4, PWM5, SPI0_CS1M0, UART0_RTSN, PMU_DEBUG2 };

enum class GPIO0D_IOMUX_L_SEL_3 : uint32_t { GPIO0_D3 };
enum class GPIO0D_IOMUX_L_SEL_1 : uint32_t { GPIO0_D1, UART2_TXM0 };
enum class GPIO0D_IOMUX_L_SEL_0 : uint32_t { GPIO0_D0, UART2_RXM0 };

enum class GPIO0D_IOMUX_H_SEL_6 : uint32_t { GPIO0_D6 };
enum class GPIO0D_IOMUX_H_SEL_5 : uint32_t { GPIO0_D5 };
enum class GPIO0D_IOMUX_H_SEL_4 : uint32_t { GPIO0_D4 };

enum class GPIO1A_IOMUX_L_SEL_3 : uint32_t {
	GPIO1_A3,
	I2S1_SCLKTXM0,
	UART3_CTSNM0,
	SCR_IO,
	PCIE30X1_WAKENM2,
	ACODEC_DACCLK
};
enum class GPIO1A_IOMUX_L_SEL_2 : uint32_t { GPIO1_A2, I2S1_MCLKM0, UART3_RTSNM0, SCR_CLK, PCIE30X1_PERSTNM2 };
enum class GPIO1A_IOMUX_L_SEL_1 : uint32_t {
	GPIO1_A1,
	I2C3_SCLM0,
	UART3_TXM0,
	CAN1_TXM0,
	AUDIOpwmROUT,
	ACODEC_ADCCLK,
	AUDIOpwmLOUTN
};
enum class GPIO1A_IOMUX_L_SEL_0 : uint32_t {
	GPIO1_A0,
	I2C3_SDAM0,
	UART3_RXM0,
	CAN1_RXM0,
	AUDIOpwmLOUT,
	ACODEC_ADCDATA,
	AUDIOpwmLOUTP
};

enum class GPIO1A_IOMUX_H_SEL_7 : uint32_t {
	GPIO1_A7,
	I2S1_SDO0M0,
	UART4_CTSNM0,
	SCR_DET,
	AUDIOpwmROUTN,
	ACODEC_DAC_DATAL
};
enum class GPIO1A_IOMUX_H_SEL_6 : uint32_t { GPIO1_A6, I2S1_LRCKRXM0, UART4_TXM0, PDM_CLK0M0, AUDIOpwmROUTP };
enum class GPIO1A_IOMUX_H_SEL_5 : uint32_t {
	GPIO1_A5,
	I2S1_LRCKTXM0,
	UART4_RTSNM0,
	SCR_RST,
	PCIE30X1_CLKREQNM2,
	ACODEC_DACSYNC
};
enum class GPIO1A_IOMUX_H_SEL_4 : uint32_t { GPIO1_A4, I2S1_SCLKRXM0, UART4_RXM0, PDM_CLK1M0, SPDIF_TXM0 };

enum class GPIO1B_IOMUX_L_SEL_3 : uint32_t { GPIO1_B3, I2S1_SDI0M0, PDM_SDI0M0 };
enum class GPIO1B_IOMUX_L_SEL_2 : uint32_t { GPIO1_B2, I2S1_SDO3M0, I2S1_SDI1M0, PDM_SDI1M0, PCIE20_PERSTNM2 };
enum class GPIO1B_IOMUX_L_SEL_1 : uint32_t {
	GPIO1_B1,
	I2S1_SDO2M0,
	I2S1_SDI2M0,
	PDM_SDI2M0,
	PCIE20_WAKENM2,
	ACODEC_ADC_SYNC
};
enum class GPIO1B_IOMUX_L_SEL_0 : uint32_t {
	GPIO1_B0,
	I2S1_SDO1M0,
	I2S1_SDI3M0,
	PDM_SDI3M0,
	PCIE20_CLKREQNM2,
	ACODEC_DAC_DATAR
};

enum class GPIO1B_IOMUX_H_SEL_7 : uint32_t { GPIO1_B7, EMMC_D3, FLASH_D3 };
enum class GPIO1B_IOMUX_H_SEL_6 : uint32_t { GPIO1_B6, EMMC_D2, FLASH_D2 };
enum class GPIO1B_IOMUX_H_SEL_5 : uint32_t { GPIO1_B5, EMMC_D1, FLASH_D1 };
enum class GPIO1B_IOMUX_H_SEL_4 : uint32_t { GPIO1_B4, EMMC_D0, FLASH_D0 };

enum class GPIO1C_IOMUX_L_SEL_3 : uint32_t { GPIO1_C3, EMMC_D7, FLASH_D7 };
enum class GPIO1C_IOMUX_L_SEL_2 : uint32_t { GPIO1_C2, EMMC_D6, FLASH_D6 };
enum class GPIO1C_IOMUX_L_SEL_1 : uint32_t { GPIO1_C1, EMMC_D5, FLASH_D5 };
enum class GPIO1C_IOMUX_L_SEL_0 : uint32_t { GPIO1_C0, EMMC_D4, FLASH_D4 };

enum class GPIO1C_IOMUX_H_SEL_7 : uint32_t { GPIO1_C7, EMMC_RSTN, FSPI_D2, FLASH_WPN };
enum class GPIO1C_IOMUX_H_SEL_6 : uint32_t { GPIO1_C6, EMMC_DATASTROBE, FSPI_CS1N, FLASH_CLE };
enum class GPIO1C_IOMUX_H_SEL_5 : uint32_t { GPIO1_C5, EMMC_CLKOUT, FLASH_DQS };
enum class GPIO1C_IOMUX_H_SEL_4 : uint32_t { GPIO1_C4, EMMC_CMD, FLASH_WRN };

enum class GPIO1D_IOMUX_L_SEL_3 : uint32_t { GPIO1_D3, FSPI_CS0N, FLASH_CS0N };
enum class GPIO1D_IOMUX_L_SEL_2 : uint32_t { GPIO1_D2, FSPI_D1, FLASH_RDN };
enum class GPIO1D_IOMUX_L_SEL_1 : uint32_t { GPIO1_D1, FSPI_D0, FLASH_RDY };
enum class GPIO1D_IOMUX_L_SEL_0 : uint32_t { GPIO1_D0, FSPI_CLK, FLASH_ALE };

enum class GPIO1D_IOMUX_H_SEL_7 : uint32_t { GPIO1_D7, SDMMC0_D2, JTAG_TCK, UART5_CTSNM0 };
enum class GPIO1D_IOMUX_H_SEL_6 : uint32_t { GPIO1_D6, SDMMC0_D1, UART2_RXM1, UART6_RXM1, PWM9_M1 };
enum class GPIO1D_IOMUX_H_SEL_5 : uint32_t { GPIO1_D5, SDMMC0_D0, UART2_TXM1, UART6_TXM1, PWM8_M1 };
enum class GPIO1D_IOMUX_H_SEL_4 : uint32_t { GPIO1_D4, FSPI_D3, FLASH_CS1N };

enum class GPIO2A_IOMUX_L_SEL_3 : uint32_t { GPIO2_A3, SDMMC1_D0, GMAC0_RXD2, UART6_RXM0 };
enum class GPIO2A_IOMUX_L_SEL_2 : uint32_t { GPIO2_A2, SDMMC0_CLK, TEST_CLKOUT, UART5_TXM0, CAN0_RXM1 };
enum class GPIO2A_IOMUX_L_SEL_1 : uint32_t { GPIO2_A1, SDMMC0_CMD, PWM10_M1, UART5_RXM0, CAN0_TXM1 };
enum class GPIO2A_IOMUX_L_SEL_0 : uint32_t { GPIO2_A0, SDMMC0_D3, JTAG_TMS, UART5_RTSNM0 };

enum class GPIO2A_IOMUX_H_SEL_7 : uint32_t { GPIO2_A7, SDMMC1_CMD, GMAC0_TXD3, UART9_RXM0 };
enum class GPIO2A_IOMUX_H_SEL_6 : uint32_t { GPIO2_A6, SDMMC1_D3, GMAC0_TXD2, UART7_TXM0 };
enum class GPIO2A_IOMUX_H_SEL_5 : uint32_t { GPIO2_A5, SDMMC1_D2, GMAC0_RXCLK, UART7_RXM0 };
enum class GPIO2A_IOMUX_H_SEL_4 : uint32_t { GPIO2_A4, SDMMC1_D1, GMAC0_RXD3, UART6_TXM0 };

enum class GPIO2B_IOMUX_L_SEL_3 : uint32_t { GPIO2_B3, GMAC0_TXD0, UART1_RXM0 };
enum class GPIO2B_IOMUX_L_SEL_2 : uint32_t { GPIO2_B2, SDMMC1_DET, I2C4_SCLM1, UART8_CTSNM0, CAN2_TXM1 };
enum class GPIO2B_IOMUX_L_SEL_1 : uint32_t { GPIO2_B1, SDMMC1_PWREN, I2C4_SDAM1, UART8_RTSNM0, CAN2_RXM1 };
enum class GPIO2B_IOMUX_L_SEL_0 : uint32_t { GPIO2_B0, SDMMC1_CLK, GMAC0_TXCLK, UART9_TXM0 };

enum class GPIO2B_IOMUX_H_SEL_7 : uint32_t { GPIO2_B7, I2S2_SCLKRXM0, GMAC0_RXD1, UART6_RTSNM0, SPI1_MOSIM0 };
enum class GPIO2B_IOMUX_H_SEL_6 : uint32_t { GPIO2_B6, GMAC0_RXD0, UART1_CTSNM0, SPI1_MISOM0 };
enum class GPIO2B_IOMUX_H_SEL_5 : uint32_t { GPIO2_B5, GMAC0_TXEN, UART1_RTSNM0, SPI1_CLKM0 };
enum class GPIO2B_IOMUX_H_SEL_4 : uint32_t { GPIO2_B4, GMAC0_TXD1, UART1_TXM0 };

enum class GPIO2C_IOMUX_L_SEL_3 : uint32_t { GPIO2_C3, I2S2_LRCKTXM0, GMAC0_MDC, UART9_RTSNM0, SPI2_MOSIM0 };
enum class GPIO2C_IOMUX_L_SEL_2 : uint32_t { GPIO2_C2, I2S2_SCLKTXM0, GMAC0_MCLKINOUT, UART7_CTSNM0, SPI2_MISOM0 };
enum class GPIO2C_IOMUX_L_SEL_1 : uint32_t { GPIO2_C1, I2S2_MCLKM0, ETH0_REFCLKO25M, UART7_RTSNM0, SPI2_CLKM0 };
enum class GPIO2C_IOMUX_L_SEL_0 : uint32_t { GPIO2_C0, I2S2_LRCKRXM0, GMAC0_RXDVCRS, UART6_CTSNM0, SPI1_CS0M0 };

enum class GPIO2C_IOMUX_H_SEL_6 : uint32_t { GPIO2_C6, CLK32K_OUT1, UART8_RXM0, SPI1_CS1M0 };
enum class GPIO2C_IOMUX_H_SEL_5 : uint32_t { GPIO2_C5, I2S2_SDIM0, GMAC0_RXER, UART8_TXM0, SPI2_CS1M0 };
enum class GPIO2C_IOMUX_H_SEL_4 : uint32_t { GPIO2_C4, I2S2_SDOM0, GMAC0_MDIO, UART9_CTSNM0, SPI2_CS0M0 };

enum class GPIO2D_IOMUX_L_SEL_3 : uint32_t { GPIO2_D3, LCDC_D3, BT656_D3M0, SPI0_CLKM1, PCIE30X1_WAKENM1, I2S1_SDI0M2 };
enum class GPIO2D_IOMUX_L_SEL_2 : uint32_t {
	GPIO2_D2,
	LCDC_D2,
	BT656_D2M0,
	SPI0_CS0M1,
	PCIE30X1_CLKREQNM1,
	I2S1_LRCKTXM2
};
enum class GPIO2D_IOMUX_L_SEL_1 : uint32_t {
	GPIO2_D1,
	LCDC_D1,
	BT656_D1M0,
	SPI0_MOSIM1,
	PCIE20_WAKENM1,
	I2S1_SCLKTXM2
};
enum class GPIO2D_IOMUX_L_SEL_0 : uint32_t {
	GPIO2_D0,
	LCDC_D0,
	BT656_D0M0,
	SPI0_MISOM1,
	PCIE20_CLKREQNM1,
	I2S1_MCLKM2
};

enum class GPIO2D_IOMUX_H_SEL_7 : uint32_t { GPIO2_D7, LCDC_D7, BT656_D7M0, SPI2_MISOM1, UART8_TXM1, I2S1_SDO0M2 };
enum class GPIO2D_IOMUX_H_SEL_6 : uint32_t {
	GPIO2_D6,
	LCDC_D6,
	BT656_D6M0,
	SPI2_MOSIM1,
	PCIE30X2_PERSTNM1,
	I2S1_SDI3M2
};
enum class GPIO2D_IOMUX_H_SEL_5 : uint32_t { GPIO2_D5, LCDC_D5, BT656_D5M0, SPI2_CS0M1, PCIE30X2_WAKENM1, I2S1_SDI2M2 };
enum class GPIO2D_IOMUX_H_SEL_4 : uint32_t {
	GPIO2_D4,
	LCDC_D4,
	BT656_D4M0,
	SPI2_CS1M1,
	PCIE30X2_CLKREQNM1,
	I2S1_SDI1M2
};

enum class GPIO3A_IOMUX_L_SEL_3 : uint32_t { GPIO3_A3, LCDC_D10, BT1120_D2, GMAC1_TXD3M0, I2S3_SCLKM0, SDMMC2_D2M1 };
enum class GPIO3A_IOMUX_L_SEL_2 : uint32_t { GPIO3_A2, LCDC_D9, BT1120_D1, GMAC1_TXD2M0, I2S3_MCLKM0, SDMMC2_D1M1 };
enum class GPIO3A_IOMUX_L_SEL_1 : uint32_t { GPIO3_A1, LCDC_D8, BT1120_D0, SPI1_CS0M1, PCIE30X1_PERSTNM1, SDMMC2_D0M1 };
enum class GPIO3A_IOMUX_L_SEL_0 : uint32_t { GPIO3_A0, LCDC_CLK, BT656_CLKM0, SPI2_CLKM1, UART8_RXM1, I2S1_SDO1M2 };

enum class GPIO3A_IOMUX_H_SEL_7 : uint32_t { GPIO3_A7, LCDC_D14, BT1120_D5, GMAC1_RXCLKM0, SDMMC2_DETM1 };
enum class GPIO3A_IOMUX_H_SEL_6 : uint32_t { GPIO3_A6, LCDC_D13, BT1120_CLK, GMAC1_TXCLKM0, I2S3_SDIM0, SDMMC2_CLKM1 };
enum class GPIO3A_IOMUX_H_SEL_5 : uint32_t { GPIO3_A5, LCDC_D12, BT1120_D4, GMAC1_RXD3M0, I2S3_SDOM0, SDMMC2_CMDM1 };
enum class GPIO3A_IOMUX_H_SEL_4 : uint32_t { GPIO3_A4, LCDC_D11, BT1120_D3, GMAC1_RXD2M0, I2S3_LRCKM0, SDMMC2_D3M1 };

enum class GPIO3B_IOMUX_L_SEL_3 : uint32_t { GPIO3_B3, LCDC_D18, BT1120_D9, GMAC1_RXDVCRSM0, I2C5_SCLM0, PDM_SDI0M2 };
enum class GPIO3B_IOMUX_L_SEL_2 : uint32_t { GPIO3_B2, LCDC_D17, BT1120_D8, GMAC1_RXD1M0, UART4_TXM1, PWM9_M0 };
enum class GPIO3B_IOMUX_L_SEL_1 : uint32_t { GPIO3_B1, LCDC_D16, BT1120_D7, GMAC1_RXD0M0, UART4_RXM1, PWM8_M0 };
enum class GPIO3B_IOMUX_L_SEL_0 : uint32_t { GPIO3_B0, LCDC_D15, BT1120_D6, ETH1_REFCLKO25MM0, SDMMC2_PWRENM1 };

enum class GPIO3B_IOMUX_H_SEL_7 : uint32_t { GPIO3_B7, LCDC_D22, PWM12_M0, GMAC1_TXENM0, UART3_TXM1, PDM_SDI2M2 };
enum class GPIO3B_IOMUX_H_SEL_6 : uint32_t { GPIO3_B6, LCDC_D21, BT1120_D12, GMAC1_TXD1M0, I2C3_SDAM1, PWM11_M0 };
enum class GPIO3B_IOMUX_H_SEL_5 : uint32_t { GPIO3_B5, LCDC_D20, BT1120_D11, GMAC1_TXD0M0, I2C3_SCLM1, PWM10_M0 };
enum class GPIO3B_IOMUX_H_SEL_4 : uint32_t { GPIO3_B4, LCDC_D19, BT1120_D10, GMAC1_RXERM0, I2C5_SDAM0, PDM_SDI1M2 };

enum class GPIO3C_IOMUX_L_SEL_3 : uint32_t { GPIO3_C3, LCDC_DEN, BT1120_D15, SPI1_CLKM1, UART5_RXM1, I2S1_SCLKRXM2 };
enum class GPIO3C_IOMUX_L_SEL_2 : uint32_t { GPIO3_C2, LCDC_VSYNC, BT1120_D14, SPI1_MISOM1, UART5_TXM1, I2S1_SDO3M2 };
enum class GPIO3C_IOMUX_L_SEL_1 : uint32_t {
	GPIO3_C1,
	LCDC_HSYNC,
	BT1120_D13,
	SPI1_MOSIM1,
	PCIE20_PERSTNM1,
	I2S1_SDO2M2
};
enum class GPIO3C_IOMUX_L_SEL_0 : uint32_t { GPIO3_C0, LCDC_D23, PWM13_M0, GMAC1_MCLKINOUTM0, UART3_RXM1, PDM_SDI3M2 };

enum class GPIO3C_IOMUX_H_SEL_7 : uint32_t { GPIO3_C7, CIF_D1, EBC_SDDO1, SDMMC2_D1M0, I2S1_SCLKTXM1, BT656_D1M1 };
enum class GPIO3C_IOMUX_H_SEL_6 : uint32_t { GPIO3_C6, CIF_D0, EBC_SDDO0, SDMMC2_D0M0, I2S1_MCLKM1, BT656_D0M1 };
enum class GPIO3C_IOMUX_H_SEL_5 : uint32_t { GPIO3_C5, PWM15_M0, SPDIF_TXM1, GMAC1_MDIOM0, UART7_RXM1, I2S1_LRCKRXM2 };
enum class GPIO3C_IOMUX_H_SEL_4 : uint32_t { GPIO3_C4, PWM14_M0, VOP_PWMM1, GMAC1_MDCM0, UART7_TXM1, PDM_CLK1M2 };

enum class GPIO3D_IOMUX_L_SEL_3 : uint32_t { GPIO3_D3, CIF_D5, EBC_SDDO5, SDMMC2_CLKM0, I2S1_SDI1M1, BT656_D5M1 };
enum class GPIO3D_IOMUX_L_SEL_2 : uint32_t { GPIO3_D2, CIF_D4, EBC_SDDO4, SDMMC2_CMDM0, I2S1_SDI0M1, BT656_D4M1 };
enum class GPIO3D_IOMUX_L_SEL_1 : uint32_t { GPIO3_D1, CIF_D3, EBC_SDDO3, SDMMC2_D3M0, I2S1_SDO0M1, BT656_D3M1 };
enum class GPIO3D_IOMUX_L_SEL_0 : uint32_t { GPIO3_D0, CIF_D2, EBC_SDDO2, SDMMC2_D2M0, I2S1_LRCKTXM1, BT656_D2M1 };

enum class GPIO3D_IOMUX_H_SEL_7 : uint32_t { GPIO3_D7, CIF_D9, EBC_SDDO9, GMAC1_TXD3M1, UART1_RXM1, PDM_SDI0M1 };
enum class GPIO3D_IOMUX_H_SEL_6 : uint32_t { GPIO3_D6, CIF_D8, EBC_SDDO8, GMAC1_TXD2M1, UART1_TXM1, PDM_CLK0M1 };
enum class GPIO3D_IOMUX_H_SEL_5 : uint32_t { GPIO3_D5, CIF_D7, EBC_SDDO7, SDMMC2_PWRENM0, I2S1_SDI3M1, BT656_D7M1 };
enum class GPIO3D_IOMUX_H_SEL_4 : uint32_t { GPIO3_D4, CIF_D6, EBC_SDDO6, SDMMC2_DETM0, I2S1_SDI2M1, BT656_D6M1 };

enum class GPIO4A_IOMUX_L_SEL_3 : uint32_t { GPIO4_A3, CIF_D13, EBC_SDDO13, GMAC1_RXCLKM1, UART7_RXM2, PDM_SDI3M1 };
enum class GPIO4A_IOMUX_L_SEL_2 : uint32_t { GPIO4_A2, CIF_D12, EBC_SDDO12, GMAC1_RXD3M1, UART7_TXM2, PDM_SDI2M1 };
enum class GPIO4A_IOMUX_L_SEL_1 : uint32_t { GPIO4_A1, CIF_D11, EBC_SDDO11, GMAC1_RXD2M1, PDM_SDI1M1 };
enum class GPIO4A_IOMUX_L_SEL_0 : uint32_t { GPIO4_A0, CIF_D10, EBC_SDDO10, GMAC1_TXCLKM1, PDM_CLK1M1 };

enum class GPIO4A_IOMUX_H_SEL_7 : uint32_t {
	GPIO4_A7,
	CAM_CLKOUT0,
	EBC_SDCE1,
	GMAC1_RXD0M1,
	SPI3_CS1M0,
	I2S1_LRCKRXM1
};
enum class GPIO4A_IOMUX_H_SEL_6 : uint32_t {
	GPIO4_A6,
	ISP_FLASHTRIGOUT,
	EBC_SDCE0,
	GMAC1_TXENM1,
	SPI3_CS0M0,
	I2S1_SCLKRXM1
};
enum class GPIO4A_IOMUX_H_SEL_5 : uint32_t { GPIO4_A5, CIF_D15, EBC_SDDO15, GMAC1_TXD1M1, UART9_RXM2, I2S2_LRCKRXM1 };
enum class GPIO4A_IOMUX_H_SEL_4 : uint32_t { GPIO4_A4, CIF_D14, EBC_SDDO14, GMAC1_TXD0M1, UART9_TXM2, I2S2_LRCKTXM1 };

enum class GPIO4B_IOMUX_L_SEL_3 : uint32_t {
	GPIO4_B3,
	I2C4_SCLM0,
	EBC_GDOE,
	ETH1_REFCLKO25MM1,
	SPI3_CLKM0,
	I2S2_SDOM1
};
enum class GPIO4B_IOMUX_L_SEL_2 : uint32_t { GPIO4_B2, I2C4_SDAM0, EBC_VCOM, GMAC1_RXERM1, SPI3_MOSIM0, I2S2_SDIM1 };
enum class GPIO4B_IOMUX_L_SEL_1 : uint32_t { GPIO4_B1, ISP_PRELIGHTTRIG, EBC_SDCE3, GMAC1_RXDVCRSM1, I2S1_SDO2M1 };
enum class GPIO4B_IOMUX_L_SEL_0 : uint32_t { GPIO4_B0, CAM_CLKOUT1, EBC_SDCE2, GMAC1_RXD1M1, SPI3_MISOM0, I2S1_SDO1M1 };

enum class GPIO4B_IOMUX_H_SEL_7 : uint32_t { GPIO4_B7, CIF_VSYNC, EBC_SDOE, GMAC1_MDIOM1, I2S2_SCLKTXM1 };
enum class GPIO4B_IOMUX_H_SEL_6 : uint32_t { GPIO4_B6, CIF_HREF, EBC_SDLE, GMAC1_MDCM1, UART1_RTSNM1, I2S2_MCLKM1 };
enum class GPIO4B_IOMUX_H_SEL_5 : uint32_t { GPIO4_B5, I2C2_SCLM1, EBC_SDSHR, CAN2_TXM0, I2S1_SDO3M1 };
enum class GPIO4B_IOMUX_H_SEL_4 : uint32_t { GPIO4_B4, I2C2_SDAM1, EBC_GDSP, CAN2_RXM0, ISP_FLASHTRIGIN, BT656_CLKM1 };

enum class GPIO4C_IOMUX_L_SEL_3 : uint32_t {
	GPIO4_C3,
	PWM15_M1,
	SPI3_MOSIM1,
	CAN1_TXM1,
	PCIE30X2_WAKENM2,
	I2S3_SCLKM1
};
enum class GPIO4C_IOMUX_L_SEL_2 : uint32_t {
	GPIO4_C2,
	PWM14_M1,
	SPI3_CLKM1,
	CAN1_RXM1,
	PCIE30X2_CLKREQNM2,
	I2S3_MCLKM1
};
enum class GPIO4C_IOMUX_L_SEL_1 : uint32_t {
	GPIO4_C1,
	CIF_CLKIN,
	EBC_SDCLK,
	GMAC1_MCLKINOUTM1,
	UART1_CTSNM1,
	I2S2_SCLKRXM1
};
enum class GPIO4C_IOMUX_L_SEL_0 : uint32_t { GPIO4_C0, CIF_CLKOUT, EBC_GDCLK, PWM11_M1 };

enum class GPIO4C_IOMUX_H_SEL_7 : uint32_t { GPIO4_C7, HDMITX_SCL, I2C5_SCLM1 };
enum class GPIO4C_IOMUX_H_SEL_6 : uint32_t { GPIO4_C6, PWM13_M1, SPI3_CS0M1, SATA0_ACTLED, UART9_RXM1, I2S3_SDIM1 };
enum class GPIO4C_IOMUX_H_SEL_5 : uint32_t { GPIO4_C5, PWM12_M1, SPI3_MISOM1, SATA1_ACTLED, UART9_TXM1, I2S3_SDOM1 };
enum class GPIO4C_IOMUX_H_SEL_4 : uint32_t {
	GPIO4_C4,
	EDPDP_HPDINM0,
	SPDIF_TXM2,
	SATA2_ACTLED,
	PCIE30X2_PERSTNM2,
	I2S3_LRCKM1
};

enum class GPIO4D_IOMUX_L_SEL_2 : uint32_t { GPIO4_D2 };
enum class GPIO4D_IOMUX_L_SEL_1 : uint32_t { GPIO4_D1, HDMITX_CECM0, SPI3_CS1M1 };
enum class GPIO4D_IOMUX_L_SEL_0 : uint32_t { GPIO4_D0, HDMITX_SDA, I2C5_SDAM1 };

using GPIO0A_IOMUX_L =
	GPIO_IOMUX<GPIO0A_IOMUX_L_SEL_0, GPIO0A_IOMUX_L_SEL_1, GPIO0A_IOMUX_L_SEL_2, GPIO0A_IOMUX_L_SEL_3>;
using GPIO0A_IOMUX_H =
	GPIO_IOMUX<GPIO0A_IOMUX_H_SEL_4, GPIO0A_IOMUX_H_SEL_5, GPIO0A_IOMUX_H_SEL_6, GPIO0A_IOMUX_H_SEL_7>;

using GPIO0B_IOMUX_L =
	GPIO_IOMUX<GPIO0B_IOMUX_L_SEL_0, GPIO0B_IOMUX_L_SEL_1, GPIO0B_IOMUX_L_SEL_2, GPIO0B_IOMUX_L_SEL_3>;
using GPIO0B_IOMUX_H =
	GPIO_IOMUX<GPIO0B_IOMUX_H_SEL_4, GPIO0B_IOMUX_H_SEL_5, GPIO0B_IOMUX_H_SEL_6, GPIO0B_IOMUX_H_SEL_7>;

using GPIO0C_IOMUX_L =
	GPIO_IOMUX<GPIO0C_IOMUX_L_SEL_0, GPIO0C_IOMUX_L_SEL_1, GPIO0C_IOMUX_L_SEL_2, GPIO0C_IOMUX_L_SEL_3>;
using GPIO0C_IOMUX_H =
	GPIO_IOMUX<GPIO0C_IOMUX_H_SEL_4, GPIO0C_IOMUX_H_SEL_5, GPIO0C_IOMUX_H_SEL_6, GPIO0C_IOMUX_H_SEL_7>;

using GPIO0D_IOMUX_L = GPIO_IOMUX<GPIO0D_IOMUX_L_SEL_0, GPIO0D_IOMUX_L_SEL_1, GPIOX_RESERVED, GPIO0D_IOMUX_L_SEL_3>;
using GPIO0D_IOMUX_H = GPIO_IOMUX<GPIO0D_IOMUX_H_SEL_4, GPIO0D_IOMUX_H_SEL_5, GPIO0D_IOMUX_H_SEL_6, GPIOX_RESERVED>;

using GPIO1A_IOMUX_L =
	GPIO_IOMUX<GPIO1A_IOMUX_L_SEL_0, GPIO1A_IOMUX_L_SEL_1, GPIO1A_IOMUX_L_SEL_2, GPIO1A_IOMUX_L_SEL_3>;
using GPIO1A_IOMUX_H =
	GPIO_IOMUX<GPIO1A_IOMUX_H_SEL_4, GPIO1A_IOMUX_H_SEL_5, GPIO1A_IOMUX_H_SEL_6, GPIO1A_IOMUX_H_SEL_7>;

using GPIO1B_IOMUX_L =
	GPIO_IOMUX<GPIO1B_IOMUX_L_SEL_0, GPIO1B_IOMUX_L_SEL_1, GPIO1B_IOMUX_L_SEL_2, GPIO1B_IOMUX_L_SEL_3>;
using GPIO1B_IOMUX_H =
	GPIO_IOMUX<GPIO1B_IOMUX_H_SEL_4, GPIO1B_IOMUX_H_SEL_5, GPIO1B_IOMUX_H_SEL_6, GPIO1B_IOMUX_H_SEL_7>;

using GPIO1C_IOMUX_L =
	GPIO_IOMUX<GPIO1C_IOMUX_L_SEL_0, GPIO1C_IOMUX_L_SEL_1, GPIO1C_IOMUX_L_SEL_2, GPIO1C_IOMUX_L_SEL_3>;
using GPIO1C_IOMUX_H =
	GPIO_IOMUX<GPIO1C_IOMUX_H_SEL_4, GPIO1C_IOMUX_H_SEL_5, GPIO1C_IOMUX_H_SEL_6, GPIO1C_IOMUX_H_SEL_7>;

using GPIO1D_IOMUX_L =
	GPIO_IOMUX<GPIO1D_IOMUX_L_SEL_0, GPIO1D_IOMUX_L_SEL_1, GPIO1D_IOMUX_L_SEL_2, GPIO1D_IOMUX_L_SEL_3>;
using GPIO1D_IOMUX_H =
	GPIO_IOMUX<GPIO1D_IOMUX_H_SEL_4, GPIO1D_IOMUX_H_SEL_5, GPIO1D_IOMUX_H_SEL_6, GPIO1D_IOMUX_H_SEL_7>;

using GPIO2A_IOMUX_L =
	GPIO_IOMUX<GPIO2A_IOMUX_L_SEL_0, GPIO2A_IOMUX_L_SEL_1, GPIO2A_IOMUX_L_SEL_2, GPIO2A_IOMUX_L_SEL_3>;
using GPIO2A_IOMUX_H =
	GPIO_IOMUX<GPIO2A_IOMUX_H_SEL_4, GPIO2A_IOMUX_H_SEL_5, GPIO2A_IOMUX_H_SEL_6, GPIO2A_IOMUX_H_SEL_7>;

using GPIO2B_IOMUX_L =
	GPIO_IOMUX<GPIO2B_IOMUX_L_SEL_0, GPIO2B_IOMUX_L_SEL_1, GPIO2B_IOMUX_L_SEL_2, GPIO2B_IOMUX_L_SEL_3>;
using GPIO2B_IOMUX_H =
	GPIO_IOMUX<GPIO2B_IOMUX_H_SEL_4, GPIO2B_IOMUX_H_SEL_5, GPIO2B_IOMUX_H_SEL_6, GPIO2B_IOMUX_H_SEL_7>;

using GPIO2C_IOMUX_L =
	GPIO_IOMUX<GPIO2C_IOMUX_L_SEL_0, GPIO2C_IOMUX_L_SEL_1, GPIO2C_IOMUX_L_SEL_2, GPIO2C_IOMUX_L_SEL_3>;
using GPIO2C_IOMUX_H = GPIO_IOMUX<GPIO2C_IOMUX_H_SEL_4, GPIO2C_IOMUX_H_SEL_5, GPIO2C_IOMUX_H_SEL_6, GPIOX_RESERVED>;

using GPIO2D_IOMUX_L =
	GPIO_IOMUX<GPIO2D_IOMUX_L_SEL_0, GPIO2D_IOMUX_L_SEL_1, GPIO2D_IOMUX_L_SEL_2, GPIO2D_IOMUX_L_SEL_3>;
using GPIO2D_IOMUX_H =
	GPIO_IOMUX<GPIO2D_IOMUX_H_SEL_4, GPIO2D_IOMUX_H_SEL_5, GPIO2D_IOMUX_H_SEL_6, GPIO2D_IOMUX_H_SEL_7>;

using GPIO3A_IOMUX_L =
	GPIO_IOMUX<GPIO3A_IOMUX_L_SEL_0, GPIO3A_IOMUX_L_SEL_1, GPIO3A_IOMUX_L_SEL_2, GPIO3A_IOMUX_L_SEL_3>;
using GPIO3A_IOMUX_H =
	GPIO_IOMUX<GPIO3A_IOMUX_H_SEL_4, GPIO3A_IOMUX_H_SEL_5, GPIO3A_IOMUX_H_SEL_6, GPIO3A_IOMUX_H_SEL_7>;

using GPIO3B_IOMUX_L =
	GPIO_IOMUX<GPIO3B_IOMUX_L_SEL_0, GPIO3B_IOMUX_L_SEL_1, GPIO3B_IOMUX_L_SEL_2, GPIO3B_IOMUX_L_SEL_3>;
using GPIO3B_IOMUX_H =
	GPIO_IOMUX<GPIO3B_IOMUX_H_SEL_4, GPIO3B_IOMUX_H_SEL_5, GPIO3B_IOMUX_H_SEL_6, GPIO3B_IOMUX_H_SEL_7>;

using GPIO3C_IOMUX_L =
	GPIO_IOMUX<GPIO3C_IOMUX_L_SEL_0, GPIO3C_IOMUX_L_SEL_1, GPIO3C_IOMUX_L_SEL_2, GPIO3C_IOMUX_L_SEL_3>;
using GPIO3C_IOMUX_H =
	GPIO_IOMUX<GPIO3C_IOMUX_H_SEL_4, GPIO3C_IOMUX_H_SEL_5, GPIO3C_IOMUX_H_SEL_6, GPIO3C_IOMUX_H_SEL_7>;

using GPIO3D_IOMUX_L =
	GPIO_IOMUX<GPIO3D_IOMUX_L_SEL_0, GPIO3D_IOMUX_L_SEL_1, GPIO3D_IOMUX_L_SEL_2, GPIO3D_IOMUX_L_SEL_3>;
using GPIO3D_IOMUX_H =
	GPIO_IOMUX<GPIO3D_IOMUX_H_SEL_4, GPIO3D_IOMUX_H_SEL_5, GPIO3D_IOMUX_H_SEL_6, GPIO3D_IOMUX_H_SEL_7>;

using GPIO4A_IOMUX_L =
	GPIO_IOMUX<GPIO4A_IOMUX_L_SEL_0, GPIO4A_IOMUX_L_SEL_1, GPIO4A_IOMUX_L_SEL_2, GPIO4A_IOMUX_L_SEL_3>;
using GPIO4A_IOMUX_H =
	GPIO_IOMUX<GPIO4A_IOMUX_H_SEL_7, GPIO4A_IOMUX_H_SEL_6, GPIO4A_IOMUX_H_SEL_5, GPIO4A_IOMUX_H_SEL_4>;

using GPIO4B_IOMUX_L =
	GPIO_IOMUX<GPIO4B_IOMUX_L_SEL_0, GPIO4B_IOMUX_L_SEL_1, GPIO4B_IOMUX_L_SEL_2, GPIO4B_IOMUX_L_SEL_3>;
using GPIO4B_IOMUX_H =
	GPIO_IOMUX<GPIO4B_IOMUX_H_SEL_4, GPIO4B_IOMUX_H_SEL_5, GPIO4B_IOMUX_H_SEL_6, GPIO4B_IOMUX_H_SEL_7>;

using GPIO4C_IOMUX_L =
	GPIO_IOMUX<GPIO4C_IOMUX_L_SEL_0, GPIO4C_IOMUX_L_SEL_1, GPIO4C_IOMUX_L_SEL_2, GPIO4C_IOMUX_L_SEL_3>;
using GPIO4C_IOMUX_H =
	GPIO_IOMUX<GPIO4C_IOMUX_H_SEL_4, GPIO4C_IOMUX_H_SEL_5, GPIO4C_IOMUX_H_SEL_6, GPIO4C_IOMUX_H_SEL_7>;

using GPIO4D_IOMUX_L = GPIO_IOMUX<GPIO4D_IOMUX_L_SEL_0, GPIO4D_IOMUX_L_SEL_1, GPIO4D_IOMUX_L_SEL_2, GPIOX_RESERVED>;

} // namespace Rockchip

// inline void example()
//{
//	PMU->gpio_a_h.write(GPIO0A_IOMUX_H_SEL_7::SDMMC0_DET);
//
//	// compile time error, can't set gpio B with gpio C options
//	PMU->gpio_b_l.write(GPIO0C_IOMUX_H_SEL_7::PWM5);
// }
